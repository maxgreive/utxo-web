---
import { uiStrings } from "@i18n/uiStrings";
import type { TranslationLink } from "./MainI18n.astro";

interface Props {
	translationLinks: TranslationLink[];
}

const { translationLinks } = Astro.props,
	pageTranslationsAvailableIn = `${
		uiStrings.pageTranslationsAvailableIn[Astro.currentLocale]
	} `;
---

<select id="language-select" aria-label="Select language">
	<option selected disabled
		>{uiStrings[Astro.currentLocale][Astro.currentLocale]}</option
	>
	{
		translationLinks.map((translation, index) => (
			<option value={translation.relativeURL}>{translation.label}</option>
		))
	}
</select>

<script>
	document
		.getElementById("language-select")
		?.addEventListener("change", (e) => {
			// @ts-ignore:next-line
			window.location.href = e.target.value;
		});
</script>

<style>
	select#language-select {
		background-color: transparent;
		color: var(--tg-gray-three);
		border: 0;
		text-transform: capitalize;
		border-radius: 4px;
		padding: 0;
		-moz-appearance: caret;
		-webkit-appearance: caret;
		appearance: caret;
	}
</style>

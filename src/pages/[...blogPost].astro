---
import { type CollectionEntry } from 'astro:content';
import { locales } from '@i18n/i18n';
import { getLocaleFromUrl} from '@i18n/utilities';
import Post from '@layouts/Post.astro';
import { getRelativePostPath } from '@utilities/getPostPath';
import getPublishedPosts from '@utilities/getPublishedPosts';
import { getPostDescription } from '@utilities/getPageDescription';

export async function getStaticPaths() {
	const collection = 'blog'
	const posts = await getPublishedPosts('', collection, '');
	let postsToRender = []

  for (let locale of locales) {
    const localePosts = posts
			.filter(function(entry){ return getLocaleFromUrl(entry.slug) === locale })
			.map((post) => ({
				params: { blogPost: `${getRelativePostPath(locale, collection, post.slug, false)}` },
				props: post,
			}));
		postsToRender.push(...localePosts)
	}
	return postsToRender
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content } = await post.render();
post.data.description = getPostDescription(post)
---

<Post {...post.data}>
	<Content />
</Post
---
import { getUniqueTags, getTagPath} from '@utilities/tags';
import { locales } from '@i18n/i18n';
import { uiStrings } from '@i18n/uiStrings';
import PostsPerTag from "@layouts/PostsPerTag.astro";
import { truncateDescription } from "@utilities/getPageDescription";
import type { Tags } from '@utilities/tags';

export async function getStaticPaths() {
  const collection = 'blog'
  let allPostsPerTagPages: any[] = []
  const getDescription = function(locale: string, tagName:string): string{
    return truncateDescription(`${uiStrings.postsPerTagPageDescription[locale]} ${tagName}.`)
  }
  for (let locale of locales) {
    const realTags: Tags = (await getUniqueTags(collection, locale))
      .filter((tag)=>{return tag.slugified !== 'other'})
    const posts = realTags.map(tag=>(  
      {
        params: {
          blogPostsPerTag: `${getTagPath(locale, tag.slugified, false)}`
        },
        props: {
          title: `${uiStrings.tagHeadingSingular[locale]}: ${tag.name}`,
          description: getDescription(locale, tag.name),
          tag: tag.slugified,
          collection: collection
        }
      }
    ))
    allPostsPerTagPages.push(...posts)
  }
  return allPostsPerTagPages
}
---
<PostsPerTag frontmatter={Astro.props}/>